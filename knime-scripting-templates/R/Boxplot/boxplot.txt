########################################################################################
# name: Boxplot 
# author: Antje Janosch
# category: basic
# preview: 

Boxplot template

######

<rgg>
<!--1. Title and short description -->

<h3 text="Boxplot" aligment="center" span="full"/>
<separator label="Description" span="full"/>
<labelarea span="full">Boxplot template</labelarea>
<gaprow height="1"/>

<separator label="Options" span="full"/>
<gaprow height="2"/>

# 1. Parameter selection
<group>

measurements = c(<panellistbox label="select columns with values for boxplot" items="$$$NUM_ATTRIBUTES$$$" span="full"/>)

#define use of flow variables
<hbox>  
<checkbox label="use flow variable (meas)" var="useFlowVarForMeasurements" selected="false" />
<textfield label="flow variable (meas)" var="flowVarForMeasurement" data-type="text" default-value= "" size="10" />
</hbox>

<separator label="" span="full"/>

#define x-axis, grid and color group
<hbox>  
xFactor = c(<listbox label="x-axis" items="-USE COLUMN SELECTION-,$$$STR_ATTRIBUTES$$$"/>)
<checkbox label="use flow variable (xFactor)" var="useFlowVarForXFactor" selected="false" />
<textfield label="flow variable (xFactor)" var="flowVarForXFactor" data-type="text" default-value= "" size="10" />
</hbox>

<separator label="" span="full"/>

<hbox>
facetBy = c(<listbox label="2D grid grouping parameters" items="-NO SELECTION-,-USE COLUMN SELECTION-,$$$STR_ATTRIBUTES$$$"/>)
<checkbox label="use flow variable (grid)" var="useFlowVarForGrid" selected="false" />
<textfield label="flow variable (grid)" var="flowVarForGrid" data-type="text" default-value= "" size="10" />
</hbox>

<separator label="" span="full"/>

<hbox>
colorBy = c(<listbox label="colored by" items="-NO SELECTION-,-USE COLUMN SELECTION-,$$$STR_ATTRIBUTES$$$"/>)
<checkbox label="use flow variable (color)" var="useFlowVarForColor" selected="false" />
<textfield label="flow variable (color" var="flowVarForColor" data-type="text" default-value= "" size="10" />
<combobox var="colorPalette" items="ggplot default,Set1,Set2,Set3,Accent,Dark2,Paired,Spectral,RdYlGn,RdYlBu,RdGy,RdBu,PuOr,PrGn,PiYG,BrBG,Blues,BuGn,BuPu,GnBu,Greens,Greys,Oranges,OrRd,PuBu,PuBuGn,PuRd,Purples,RdPu,Reds,YlGn,YlGnBu,YlOrBr,YlOrRd,KNIME colors" label="Color palette:"/>
</hbox>

<separator label="Boxplot Options" span="full"/>

<hbox>
<checkbox label="show outliers" var="showOutliers" selected="true" />
<checkbox label="show notches" var="showNotches" selected="false" />
</hbox>
<hbox>
<checkbox label="show single datapoints" var="showDatapoints" selected="false" />
jitterWidth = as.numeric(c(<vector label="jitter width of points:" size="1" default-value="0.25"/>))
</hbox>

<separator label="Coordinate Options" span="full"/>

<vbox>
<hbox>
<radiobutton var="yScales" label="free y scales" return-value-by-selected="free_y" button-group="yscales" selected="TRUE"/>
<radiobutton var="yScales" label="fixed y scales" return-value-by-selected="fixed" button-group="yscales"/>
<radiobutton var="yScales" label="custom (fixed) y-limits:" return-value-by-selected="custom" button-group="yscales"/>
<vector  var="ylims" label="[ymin,ymax]"
size="2" default-value=""/>
</hbox>
<checkbox label="flip x/y coordinates" var="flipCoords" selected="false" />
</vbox>

</group>

# 2. r-code
<![CDATA[

library(ggplot2)
library(dplyr)
library(tidyr)

#TODO: check use of flowvars for measurements
if(useFlowVarForXFactor) xFactor <- flowVarForXFactor
if(useFlowVarForGrid) facetBy <- flowVarForGrid
if(useFlowVarForColor) colorBy <- flowVarForColor

# no measurement and/or factor column(s) selected
if(is.null(measurements)) stop("Error: Template initialization fails - no column(s) for bar height selected") 
if(is.null(xFactor)) stop("Error: Template initialization fails - no column(s) for x-axis selected") 

# if outliers should be displayed, set outlier shape to NULL (default)
outlierShape <- NA
if(showOutliers)
  outlierShape <- NULL
# if datapoints should be displayed too, hide outliers with outlier shape = NA
if(showDatapoints)
  outlierShape <- NA

keepColumns <- measurements

multiXFactor <- FALSE
# xFactor should never be NULL
if("-USE COLUMN SELECTION-" %in% xFactor) {
  xFactor <- measurements
} else {
  keepColumns <- c(keepColumns, xFactor)
  if(length(xFactor) >= 2) multiXFactor <- TRUE
}

multiFacetBy <- FALSE
if("-NO SELECTION-" %in% facetBy)
  facetBy = NULL
if("-USE COLUMN SELECTION-" %in% facetBy) {
  facetBy <- "variable"
} else {
  if(!is.null(facetBy)) {
    keepColumns <- c(keepColumns, facetBy)
    if(length(facetBy) >= 2) multiFacetBy <- TRUE
  }
}

multiColorBy <- FALSE
if("-NO SELECTION-" %in% colorBy)
  colorBy = NULL
if("-USE COLUMN SELECTION-" %in% colorBy) {
  colorBy <- "variable"
} else {
  if(!is.null(colorBy)) {
    keepColumns <- c(keepColumns, colorBy)
    if(length(colorBy) >= 2) multiColorBy <- TRUE
  }
}

keepColumns <- unique(keepColumns)
subdata <- kIn %>% select(all_of(keepColumns))

if(multiXFactor) {
  columnHeader <- paste(xFactor, collapse = " + ")
  subdata <- subdata %>% unite({{columnHeader}}, all_of(xFactor), sep = " + ", remove = FALSE)
  xFactor <- columnHeader
}
if(multiFacetBy) {
  columnHeader <- paste(facetBy, collapse = " + ")
  subdata <- subdata %>% unite({{columnHeader}}, all_of(facetBy), sep = " + ", remove = FALSE)
  facetBy <- columnHeader
}
if(multiColorBy) {
  columnHeader <- paste(colorBy, collapse = " + ")
  subdata <- subdata %>% unite({{columnHeader}}, all_of(colorBy), sep = " + ", remove = FALSE)
  colorBy <- columnHeader
}

data <- subdata %>% pivot_longer(all_of(measurements), names_to = "variable", values_to = "value")

p <- ggplot(data, aes(x = get(xFactor), y = value)) + geom_boxplot(notch = showNotches, outlier.shape = outlierShape)
if(!is.null(colorBy))
  p <- p + aes(fill = get(colorBy))

if(showDatapoints) {
  if(!is.null(colorBy)) p <- p + geom_point(position = position_jitterdodge(jitter.width = jitterWidth), shape=21)
  else p <- p + geom_point(position = position_jitter(width = jitterWidth), shape=21)
}


if(!is.null(facetBy)) p <- p + facet_wrap( ~ get(facetBy), scales = "free")
if(flipCoords) p <- p + coord_flip()

print(p)

]]>
</rgg>